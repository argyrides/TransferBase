﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML.Transforms;
using Microsoft.ML;

namespace TransferBase
{
    public partial class MLModelPredictTransferSuccess
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(new []{new InputOutputColumnPair(@"is_played_in_bigger_competitions", @"is_played_in_bigger_competitions"),new InputOutputColumnPair(@"is_played_in_similar_competitions", @"is_played_in_similar_competitions"),new InputOutputColumnPair(@"player_position", @"player_position")}, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"club_from_average_player_valuations", @"club_from_average_player_valuations"),new InputOutputColumnPair(@"club_to_average_player_valuations", @"club_to_average_player_valuations"),new InputOutputColumnPair(@"club_to_player_valuations", @"club_to_player_valuations"),new InputOutputColumnPair(@"age", @"age"),new InputOutputColumnPair(@"injury_rate", @"injury_rate"),new InputOutputColumnPair(@"highest_market_value", @"highest_market_value"),new InputOutputColumnPair(@"current_market_value", @"current_market_value"),new InputOutputColumnPair(@"teams_changed_during_career", @"teams_changed_during_career"),new InputOutputColumnPair(@"number_of_locals_in_new_team", @"number_of_locals_in_new_team"),new InputOutputColumnPair(@"number_of_players_in_new_team_same_position", @"number_of_players_in_new_team_same_position"),new InputOutputColumnPair(@"average_market_value_of_player_new_team_same_position", @"average_market_value_of_player_new_team_same_position"),new InputOutputColumnPair(@"maximum_market_value_of_player_new_team_same_position", @"maximum_market_value_of_player_new_team_same_position"),new InputOutputColumnPair(@"number_of_players_in_new_team_same_country", @"number_of_players_in_new_team_same_country"),new InputOutputColumnPair(@"average_attendance_of_new_team", @"average_attendance_of_new_team"),new InputOutputColumnPair(@"adaptation", @"adaptation"),new InputOutputColumnPair(@"ambition", @"ambition"),new InputOutputColumnPair(@"consistency", @"consistency"),new InputOutputColumnPair(@"resistant_to_stress", @"resistant_to_stress"),new InputOutputColumnPair(@"professional", @"professional"),new InputOutputColumnPair(@"previous_season_goals", @"previous_season_goals"),new InputOutputColumnPair(@"previous_season_assists", @"previous_season_assists"),new InputOutputColumnPair(@"previous_season_total_minutes_played", @"previous_season_total_minutes_played"),new InputOutputColumnPair(@"previous_season_clean_sheets", @"previous_season_clean_sheets"),new InputOutputColumnPair(@"average_skills", @"average_skills"),new InputOutputColumnPair(@"previous_season_goals_conceded", @"previous_season_goals_conceded"),new InputOutputColumnPair(@"previous_season_keeper_saves", @"previous_season_keeper_saves")}))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"is_played_in_bigger_competitions",@"is_played_in_similar_competitions",@"player_position",@"club_from_average_player_valuations",@"club_to_average_player_valuations",@"club_to_player_valuations",@"age",@"injury_rate",@"highest_market_value",@"current_market_value",@"teams_changed_during_career",@"number_of_locals_in_new_team",@"number_of_players_in_new_team_same_position",@"average_market_value_of_player_new_team_same_position",@"maximum_market_value_of_player_new_team_same_position",@"number_of_players_in_new_team_same_country",@"average_attendance_of_new_team",@"adaptation",@"ambition",@"consistency",@"resistant_to_stress",@"professional",@"previous_season_goals",@"previous_season_assists",@"previous_season_total_minutes_played",@"previous_season_clean_sheets",@"average_skills",@"previous_season_goals_conceded",@"previous_season_keeper_saves"}))      
                                    .Append(mlContext.Regression.Trainers.FastForest(new FastForestRegressionTrainer.Options(){NumberOfTrees=42,NumberOfLeaves=10,FeatureFraction=1F,LabelColumnName=@"transfer_success",FeatureColumnName=@"Features"}));

            return pipeline;
        }
    }
}
